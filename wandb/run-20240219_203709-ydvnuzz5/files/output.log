
[480 360  32]
Using MSE for heatmap regression, weight: 100
Using L1 for offset regression, weight: 10
[PANOPTIC EVAL] IGNORE:  [ 0 20]
[PANOPTIC EVAL] INCLUDE:  [ 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19]
Epoch 0 => Start Training...
epoch: 0   lr: 0.00400
  0%|                                                                                       | 0/798 [00:00<?, ?it/s]Traceback (most recent call last):
  File "train_distributed.py", line 611, in <module>
    main()
  File "train_distributed.py", line 569, in main
    loss.backward()
  File "/opt/conda/lib/python3.8/site-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "/opt/conda/lib/python3.8/site-packages/torch/autograd/__init__.py", line 200, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 4.95 GiB (GPU 0; 79.17 GiB total capacity; 74.10 GiB already allocated; 2.74 GiB free; 75.86 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF